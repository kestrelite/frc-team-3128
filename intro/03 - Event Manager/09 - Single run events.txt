GOAL: Learn how and when certain events are executed, and how to trigger single-run events
-----

DETAILS: The EventManager is a rather simple block of code which drives the entire robot. It takes Events, or small blocks of code, and runs them in the sequence they were queued.

An Event is an abstract class. If you don't know what abstract classes are, it is strongly suggested that you look up the documentation for them. An Event must be declared as a class. That means, to create an event, you must do the following:

	class EventImpl extends Event {
		public void execute() {
			//your code
		}
	}

If you do not have the execute() function, you will not be adhering to the Event abstract class, and NetBeans will barf errors in your face.

You can also declare an Event inline, but it _must_ have an implementation.

	Event e = new Event() {
		public void execute() {
			//your code
		}
	};

You can also declare an Event inline, and directly queue it:

	(new Event() {
		public void execute() {
			//your code
		}
	}).registerIterableEvent();

The Event has several critical functions:

  - registerSingleEvent()       : this function will insert the Event into the EventManager's queue, and run it once before removing it.
  - registerIterableEvent()     : this function will insert the Event into the EventManager's queue, and it won't be removed until it is cancelled directly (or the entire Event stack is dropped).
  - registerTimedEvent(int msec): this function will create a new instance of a TimerEvent and register it as an iterable event. When the timer expires, the selected Event will be run. If you're going to call this function, it is _highly_ recommended that you call prepareTimer() first.

That's it for starting events. For cancelling events:

  - cancelEvent()             : this will cancel the running event.
  - cancelTimedEvent()        : this will cancel the event's execution timer.
  - cancelEventAfter(int msec): this will cancel the event after a given amount of time.

The EventManager is called automatically in RobotTemplate. Do not modfiy RobotTemplate.

-----

TASK: Create a single run event which will print out some text.
-----

SUCCESS: 
  1) The text is printed out using DebugLog and an Event
  2) No resources are kept longer than they are needed
-----